name: Install Neovim
on:
  workflow_call:
    inputs:
      version:
        description: Neovim version to install. Can be stable/nightly or a version
        type: string
        required: true
        default: 'stable'
    outputs:
      neovim_path:
        description: 'Path to installed Neovim'
        value: ${{ jobs.install.outputs.neovim_path }}

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      neovim_path: ${{ steps.set-path.outputs.neovim_path }}
    steps:
      - name: Date
        shell: bash
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Neovim Cache Restore
        id: cache-neovim-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}/nvim
          key: neovim-cache-${{ env.DATE }}-${{ inputs.version }}
      - name: Install Neovim
        if: steps.cache-neovim-restore.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p ${{ runner.temp }}/nvim
          wget -q https://github.com/neovim/neovim/releases/download/${{ inputs.version }}/nvim-linux-x86_64.appimage -O ${{ runner.temp }}/nvim/nvim.appimage
          cd ${{ runner.temp }}/nvim
          chmod a+x ./nvim.appimage
          ./nvim.appimage --appimage-extract
      - name: Neovim Cache Save
        id: cache-neovim-save
        if: steps.cache-neovim-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ runner.temp }}/nvim
          key: ${{ steps.cache-neovim-restore.outputs.cache-primary-key }}
      - name: Set Neovim Path
        id: set-path
        shell: bash
        run: |
          echo "neovim_path=${{ runner.temp }}/nvim/squashfs-root/usr/bin/" >> $GITHUB_OUTPUT
      - name: Add Neovim to PATH
        shell: bash
        run: |
          echo "${{ steps.set-path.outputs.neovim_path }}" >> $GITHUB_PATH
      - name: Neovim version
        shell: bash
        run: nvim --version
